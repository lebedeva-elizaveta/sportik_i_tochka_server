"""add enums

Revision ID: 8fcaf160114b
Revises: 431005dd2c6f
Create Date: 2024-04-20 13:39:30.260550

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8fcaf160114b'
down_revision = '431005dd2c6f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('premium', schema=None) as batch_op:
        batch_op.drop_index('ix_premium_user_id')

    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.drop_index('ix_activity_user_id')

    with op.batch_alter_table('user_model', schema=None) as batch_op:
        batch_op.drop_index('ix_user_model_email')
        batch_op.drop_index('ix_user_model_password_hash')

    with op.batch_alter_table('achievement', schema=None) as batch_op:
        batch_op.drop_index('ix_achievement_user_id')
    # ### end Alembic commands ###



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('card',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('card_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('card_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('card_number_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('cvv_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('month_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('year_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='card_pkey'),
    sa.UniqueConstraint('card_number_hash', name='card_card_number_hash_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('admin__premium',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('admin_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('premium_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], name='admin__premium_admin_id_fkey'),
    sa.ForeignKeyConstraint(['premium_id'], ['premium.id'], name='admin__premium_premium_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='admin__premium_pkey')
    )
    op.create_table('achievement',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('distance', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='achievement_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='achievement_pkey')
    )
    with op.batch_alter_table('achievement', schema=None) as batch_op:
        batch_op.create_index('ix_achievement_user_id', ['user_id'], unique=False)

    op.create_table('user_model',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('birthday', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('avatar', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_of_registration', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_blocked', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_model_pkey')
    )
    with op.batch_alter_table('user_model', schema=None) as batch_op:
        batch_op.create_index('ix_user_model_password_hash', ['password_hash'], unique=False)
        batch_op.create_index('ix_user_model_email', ['email'], unique=True)

    op.create_table('activity',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('distance', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('calories', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='activity_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activity_pkey')
    )
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.create_index('ix_activity_user_id', ['user_id'], unique=False)

    op.create_table('premium',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='premium_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='premium_pkey')
    )
    with op.batch_alter_table('premium', schema=None) as batch_op:
        batch_op.create_index('ix_premium_user_id', ['user_id'], unique=False)

    op.create_table('admin__user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('admin_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], name='admin__user_admin_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='admin__user_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='admin__user_pkey')
    )
    op.create_table('user__card',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['card.id'], name='user__card_card_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user__card_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user__card_pkey')
    )
    # ### end Alembic commands ###
